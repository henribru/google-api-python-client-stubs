name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Install Poetry
        run: pip install poetry

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: poetry install

      - name: Register problem matcher
        run: echo "::add-matcher::.github/workflows/matchers/ruff.json"

      - name: Delete .gitignore (https://github.com/astral-sh/ruff/issues/8753)
        run: rm .gitignore              

      - name: Run ruff format
        run: poetry run ruff format --check googleapiclient-stubs apiclient-stubs

  ruff-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Install Poetry
        run: pip install poetry

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: poetry install

      - name: Delete .gitignore (https://github.com/astral-sh/ruff/issues/8753)
        run: rm .gitignore        

      - name: Run ruff check
        run:  poetry run ruff check --output-format github googleapiclient-stubs apiclient-stubs

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Install Poetry
        run: pip install poetry

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: poetry install

      - name: Register problem matchers
        run: echo "::add-matcher::.github/workflows/matchers/mypy.json"

      - name: Run Mypy
        run: |
          poetry run mypy googleapiclient-stubs apiclient-stubs
